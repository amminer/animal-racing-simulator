[X] Linkedlist copy constructors/operator=/recursive copy all
	Need help from Karla

[X] Change size_brackets to a class not a struct,
Un-nest it from within class Animal if you have time - not necessary

[X] ~Animal does not need to be virtual, just change it

[/] Implement copy constructors instead of deleting for dyn mem classes

[X] Implement Animal::calculate_time(...) for subclasses

Implement Animal::predates(Animal&) func

Implement Race, Stable, Stadium

change CLL to use rear instead of head and tail

ensure const is used wherever possible

ensure objects are passed by const reference whenever possible

ensure all classes with dyn mem (Animal&subs, lists, nodes) can deep copy (or delete copy constr)

ensure all =operators return a reference to their object (*this)

ensure order of declarations is as follows:
	preprocessor directives
	includes
	header comment
	constructors
	destructor
	methods
	data (private or protected)
